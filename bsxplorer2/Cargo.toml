[package]
name = "bsxplorer2"
version = "0.2.0-rc"
edition = "2021"
authors = ["shitohana (kyudytskiy@gmail.com)"]
license-file = "../LICENSE.md"
description = "A high-performance library for bisulfite sequencing data analysis and DNA methylation research"
repository = "https://github.com/shitohana/bsxplorer2"
keywords = ["bioinformatics", "methylation", "bisulfite", "epigenetics", "genomics"]
categories = ["science", "data-structures", "algorithms", "mathematics"]
readme = "../README.md"

[features]
compression = ["zstd", "lz4", "flate2", "xz2", "bzip2", "zip"]
performant = ["polars/performant"]
console = ["clap"]

[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
panic = "abort"
strip = "symbols"

[lib]
path = "src/lib.rs"

[dev-dependencies]
rstest = "0.25.0"
assert_approx_eq = "1.1.0"

[dependencies]
# Utility
anyhow = "1.0.91"
once_cell = "1.21.3"
crossbeam = "0.8.4"
itertools = "0.14.0"
num = "0.4.3"
rayon = "1.10"
tempfile = "3.15.0"
indexmap = "2.9.0"
multimap = "0.10.0"
arcstr = "1.2.0"
uuid = "1.16.0"
csv = { version = "1.3.1" }

# Logging
log = "0.4.22"
pretty_env_logger = "0.5.0"

# Serde
serde = "1.0.217"
serde_json = "1"

# Stats
adjustp = "0.1.6"
rand = { version = "=0.8.5", features = ["std", "std_rng"] }
rand_distr = "=0.4.3"
statrs = "0.18.0"

# Bio
bio = "2.0.3"
bio-types = "1.0.4"
noodles = { version = "0.90.0", features = ["fasta"] }

# Compression
zstd = { version = "0.13.3", optional = true}
lz4 = {version = "1.28.1", optional = true}
xz2 = {version = "0.1.7", optional = true}
bzip2 = { version = "0.5.2", optional = true}
zip = { version = "2.6.1", optional = true}
flate2 = { version = "1.1.1", optional = true}

# Console
clap = { version = "4.1", features = ["derive"], optional = true}


[dependencies.polars]
version = "=0.45.0"
default-features = false
features = [
    # Data types
    "dtype-i16",
    "dtype-u16",
    "dtype-categorical",
    "dtype-struct",
    # Lazy
    "lazy",
    # IO
    "csv",
    "ipc",
    # DataFrame operations
    "partition_by",
    "polars-ops",
    # Expressions
    "strings",
    "is_in",
    "round_series",
    "concat_str",
    "rank",
    "fmt"
]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(coverage,coverage_nightly)'] }
